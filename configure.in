define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl

dnl Process this file with autoconf to produce a configure script.
AC_REVISION($Revision: 1.4 $)
AC_PREREQ(2.52)
AC_INIT
AC_CONFIG_SRCDIR([say.c])
AC_CANONICAL_HOST
AC_CONFIG_HEADER(config.h)

PROGS="say"
dnl Set up link to the native play program
hplay=dummy
dbm=none
make_dist=/dev/null
prefix=/usr/local

dnl AC_PREFIX_PROGRAM(gcc)

if test -z "$CC" && test -n "$GCC" ; then
CC=$GCC
fi

dnl Checks for programs.
AC_PROG_CC

if test "$GCC" != yes; then
CFLAGS="-O"
fi

AC_ISC_POSIX
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_RANLIB


dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h sys/types.h sys/file.h sys/ioctl.h sys/time.h unistd.h)
if test "$ac_cv_header_stdc" != yes; then
AC_CHECK_FUNCS(strchr memcpy)
AC_CHECK_HEADERS(memory.h malloc.h)
fi
AC_CHECK_FUNCS(ftruncate chsize truncate)

case "$host" in
*-sun-*) hplay=sun; AC_CHECK_HEADERS(sys/ioccom.h sys/audioio.h sun/audioio.h);;
*-sgi-*) hplay=sgi ;;
*-next-*) hplay=NeXT; AC_CHECK_HEADERS(libc.h) ;;
*-*-freebsd*) hplay=linux ;;
*-*-linux*) hplay=linux ;;
*-*-hpux*)  hplay=hpux ;;
*-*-*) echo "Unknown host type $host" ;;
esac

AC_MSG_WARN(prefix is $prefix)

if test "$hplay" = linux; then
 AC_CHECK_HEADERS(alsa/asoundlib.h,hplay=alsa,hplay=oss)
fi

if test "$hplay" = alsa; then
 AC_CHECK_LIB(asound,snd_pcm_open)
fi

if test "$hplay" = oss; then
 AC_CHECK_HEADERS(sys/soundcard.h machine/soundcard.h,break,hplay=dummy)
 if test -c /dev/dspW ; then
  AC_DEFINE(HAVE_DEV_DSPW)
 fi
 if test -c /dev/audio ; then
  AC_DEFINE(HAVE_DEV_AUDIO)
 fi
 if test -c /dev/dsp ; then
  AC_DEFINE(HAVE_DEV_DSP)
 fi
 if test -c /dev/sbdsp ; then
  AC_DEFINE(HAVE_DEV_SBDSP)
 fi
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T

dnl See if float can be used in protos followed by K&R definition
AC_MSG_CHECKING(if we can use float in prototypes)
AC_TRY_COMPILE([#include "$srcdir/proto.h"],[
} int func PROTO((float a));
int func(a) float a; { ],AC_MSG_RESULT(yes),[
AC_DEFINE(NOPROTOFLOAT)
AC_MSG_RESULT(no)
])

if test -d $prefix/include; then
 CPPFLAGS="$CPPFLAGS -I$prefix/include"
 AC_MSG_WARN(Using -I$prefix/include)
fi

if test -d $prefix/lib; then
 LIBS="-L$prefix/lib $LIBS"
 AC_MSG_WARN(Using -L$prefix/lib)
fi

AC_ARG_WITH(gdbm,[  --with-gdbm[=<path>]    Uninstalled GNU gdbm source directory],[
if test "$withval" != "" && test -d "$withval" ; then
 CPPFLAGS="-I$withval $CPPFLAGS"
 LIBS="-L$withval $LIBS"
else
 echo "--with-gdbm=$withval"
fi])

AC_ARG_WITH(aDict,[  --with-aDict[=<path>]   American Dictionary],[
if test "$withval" != "" && test -r "$withval" ; then
 AC_MSG_NOTICE(Using $withval as American Dictionary)
 ADICT="$withval"
 BUILD="$BUILD aDict.db"
 DICTS="$DICTS aDict.db"
else
 AC_MSG_WARN(Cannot read $withval for American Dictionary)
fi])

AC_ARG_WITH(bDict,[  --with-bDict[=<path>]   British Dictionary],[
if test "$withval" != "" && test -r "$withval" ; then
 AC_MSG_NOTICE(Using $withval as British Dictionary)
 BDICT="$withval"
 BUILD="$BUILD bDict.db"
 DICTS="$DICTS bDict.db"
else
 AC_MSG_WARN(Cannot read $withval for British Dictionary)
fi])

AC_PATH_PROG(PERL,perl)
if test "perl" != ""; then
  BUILD="$BUILD perlstuff"
  EXTRA_INST="$EXTRA install_perl"
fi

AC_ARG_WITH(festival,[  --with-festival[=<path>]   Festival Directory],[
if test "$withval" != "" && test -d "$withval/lib/voices" ; then
 FESTIVAL="$withval"
 BUILD="$BUILD festival"
 EXTRA_INST="$EXTRA_INST install_festival"
else
 AC_MSG_WARN(Cannot find $withval/lib/voices directory)
fi])

DEFAULT_DICT=b

AC_ARG_WITH(defDict,[  --with-defDict[=<a|b>]   Default Dictionary, American (a) or British (b)],[
if test "$withval" != "" ; then
 DEFAULT_DICT="$withval"
else
 echo "Cannot read $withval"
fi])

CPPFLAGS="-I. -I$srcdir $CPPFLAGS"

AC_CHECK_LIB(M,atan)
AC_CHECK_LIB(m,atan)

AS_MESSAGE([checking for database libraries...])
AC_CHECK_LIB(gdbm,gdbm_open)
AC_CHECK_LIB(db,db_open)

AC_CHECK_HEADERS(db.h)

if test "$ac_cv_lib_db_db_open" = yes ; then
 PROGS="$PROGS mkdictdb dlookup"
 AC_MSG_WARN(Using db)
else
 if test "$ac_cv_lib_gdbm_gdbm_open" = yes ; then
  AC_MSG_WARN(Using gdbm)
  PROGS="$PROGS mkdictdb dlookup"
 else
  AC_MSG_WARN(No database)
  BUILD=""
 fi
fi


if test "$hplay" = sgi; then
AC_CHECK_LIB(audio,ALopenport)
fi


dnl Checking for X11
AC_PATH_XTRA
if test -n "$x_includes" ; then
CPPFLAGS="$CPPFLAGS -I$x_includes"
fi

AC_CHECK_LIB(socket,socket,XLIBS="-lsocket $XLIBS")
AC_CHECK_LIB(nsl,inet_addr,XLIBS="-lnsl $XLIBS")
AC_CHECK_LIB(X11,XauReadAuth,[
XLIBS="$X_LIBS -lX11 $XLIBS"
AC_DEFINE(HAVE_LIBX11)
],,$X_LIBS $XLIBS $LIBS)

AC_CHECK_LIB(Xt,XtAppAddInput,[
XLIBS="$X_LIBS -lXt $XLIBS"
AC_DEFINE(HAVE_LIBXT)
],,$X_LIBS $XLIBS $LIBS)

dnl See if we can find nas audio library
AC_CHECK_HEADERS(audio/audiolib.h)
if test "$ac_cv_header_audio_audiolib_h" = yes ; then
  AC_CHECK_LIB(audio,AuOpenServer,[
  XLIBS="$XLIBS -laudio"
  AC_DEFINE(HAVE_NAS)
  ],,$XLIBS $LIBS)
  if test "$ac_cv_lib_audio_AuOpenServer" = yes; then
   if test "$hplay" = dummy; then
    hplay="na"
    LIBS="$XLIBS $LIBS"
    XLIBS=""
   else
    PROGS="$PROGS nasay"
   fi
 fi
fi

dnl Check for obscure but speed-enhancing sun hack
if test "$hplay" = sun; then
AC_TRY_LINK(,nonstandard_arithmetic();,AC_DEFINE(HAVE_NONSTDARITH))
fi

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_TYPE_SIGNAL

AC_MSG_CHECKING(for GNU make)
if make -v 2>/dev/null | grep -i 'GNU *Make' > /dev/null ; then
make_dist=$srcdir/config/make_dist
AC_MSG_RESULT(yes)
else
AC_MSG_RESULT(no)
fi

AC_SUBST(CC)
AC_SUBST(RANLIB)
AC_SUBST(INSTALL)
AC_SUBST(INSTALL_PROGRAM)
AC_SUBST(INSTALL_DATA)
AC_SUBST(BUILD)
AC_SUBST(EXTRA_INST)
AC_SUBST(PERL)
AC_SUBST(FESTIVAL)
AC_SUBST(ADICT)
AC_SUBST(BDICT)
AC_SUBST(DICTS)
AC_SUBST(DEFAULT_DICT)
AC_SUBST(XLIBS)
AC_SUBST(PROGS)
AC_SUBST(NOPROTOFLOAT)
AC_SUBST(HAVE_NONSTDARITH)
AC_SUBST_FILE(make_dist)

ac_sources="config/${hplay}play.c"
ac_dests="hplay.c"
while test -n "$ac_sources"; do
  set $ac_dests; ac_dest=$1; shift; ac_dests=$*
  set $ac_sources; ac_source=$1; shift; ac_sources=$*
  ac_config_links_1="$ac_config_links_1 $ac_dest:$ac_source"
done
AC_CONFIG_LINKS([$ac_config_links_1])
AC_CONFIG_FILES([Makefile])
AC_OUTPUT

